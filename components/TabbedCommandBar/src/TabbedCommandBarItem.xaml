<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
                    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
                    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
                    xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <StaticResource x:Key="ContextualItemForeground"
                            ResourceKey="AccentTextFillColorPrimaryBrush" />
            <StaticResource x:Key="ContextualItemForegroundPointerOver"
                            ResourceKey="AccentTextFillColorSecondaryBrush" />
            <StaticResource x:Key="ContextualItemForegroundPressed"
                            ResourceKey="AccentTextFillColorTertiaryBrush" />
            <StaticResource x:Key="ContextualItemForegroundDisabled"
                            ResourceKey="AccentTextFillColorDisabledBrush" />

            <StaticResource x:Key="ContextualItemForegroundSelected"
                            ResourceKey="AccentTextFillColorPrimaryBrush" />
            <StaticResource x:Key="ContextualItemForegroundSelectedPointerOver"
                            ResourceKey="AccentTextFillColorSecondaryBrush" />
            <StaticResource x:Key="ContextualItemForegroundSelectedPressed"
                            ResourceKey="AccentTextFillColorTertiaryBrush" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="Light">
            <StaticResource x:Key="ContextualItemForeground"
                            ResourceKey="AccentTextFillColorPrimaryBrush" />
            <StaticResource x:Key="ContextualItemForegroundPointerOver"
                            ResourceKey="AccentTextFillColorSecondaryBrush" />
            <StaticResource x:Key="ContextualItemForegroundPressed"
                            ResourceKey="AccentTextFillColorTertiaryBrush" />
            <StaticResource x:Key="ContextualItemForegroundDisabled"
                            ResourceKey="AccentTextFillColorDisabledBrush" />

            <StaticResource x:Key="ContextualItemForegroundSelected"
                            ResourceKey="AccentTextFillColorPrimaryBrush" />
            <StaticResource x:Key="ContextualItemForegroundSelectedPointerOver"
                            ResourceKey="AccentTextFillColorSecondaryBrush" />
            <StaticResource x:Key="ContextualItemForegroundSelectedPressed"
                            ResourceKey="AccentTextFillColorTertiaryBrush" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <StaticResource x:Key="ContextualItemForeground"
                            ResourceKey="SystemControlHyperlinkTextBrush" />
            <StaticResource x:Key="ContextualItemForegroundPointerOver"
                            ResourceKey="SystemControlPageTextBaseMediumBrush" />
            <StaticResource x:Key="ContextualItemForegroundPressed"
                            ResourceKey="SystemControlHighlightBaseMediumLowBrush" />
            <StaticResource x:Key="ContextualItemForegroundDisabled"
                            ResourceKey="SystemControlHighlightBaseMediumLowBrush" />

            <StaticResource x:Key="ContextualItemForegroundSelected"
                            ResourceKey="SystemControlHyperlinkTextBrush" />
            <StaticResource x:Key="ContextualItemForegroundSelectedPointerOver"
                            ResourceKey="SystemControlPageTextBaseMediumBrush" />
            <StaticResource x:Key="ContextualItemForegroundSelectedPressed"
                            ResourceKey="SystemControlHighlightBaseMediumLowBrush" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <Style BasedOn="{StaticResource DefaultTabbedCommandBarItemStyle}"
           TargetType="controls:TabbedCommandBarItem" />

    <Style x:Key="DefaultTabbedCommandBarItemStyle"
           BasedOn="{StaticResource DefaultCommandBarStyle}"
           TargetType="controls:TabbedCommandBarItem">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="DefaultLabelPosition" Value="Right" />
        <Setter Property="Background" Value="Transparent" />
        <!--
            Is there a way to prevent the overflow button from showing if there aren't any buttons to send to the overflow menu?
            (See this message in the WinUI channel: https://discord.com/channels/372137812037730304/671870147354427422/771057634203402300 )
            Hardcoding the height of the CommandBar works, but it's a bit of a hack.
        -->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <DataTemplate x:Key="NormalTabTemplate">
        <muxc:NavigationViewItem Content="{Binding Header}"
                                 Visibility="{Binding Visibility}" />
    </DataTemplate>
    <DataTemplate x:Key="ContextualTabTemplate">
        <muxc:NavigationViewItem Background="Transparent"
                                 Content="{Binding Header}"
                                 Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}"
                                 Style="{StaticResource ContextualTabItemStyle}"
                                 Visibility="{Binding Visibility}" />
    </DataTemplate>

    <controls:TabbedCommandBarItemTemplateSelector x:Key="DefaultTabbedCommandBarItemTemplateSelector"
                                                   Contextual="{StaticResource ContextualTabTemplate}"
                                                   Normal="{StaticResource NormalTabTemplate}" />

    <Style x:Key="TabbedCommandBarElementContainerStyle"
           TargetType="AppBarElementContainer">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="1,0" />
    </Style>

    <!--  These NavigationView styles are copied from the WinUI repo - the visual states are changed to use the right accent colors. We have to use a copy of the styles, overriding the resources resulted in a bug where theme switching did not update the foreground color resulting in poor visibility of the text  -->
    <Style x:Key="ContextualItemPresenterStyle"
           TargetType="primitives:NavigationViewItemPresenter">
        <Setter Property="Foreground" Value="{ThemeResource ContextualItemForeground}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot"
                          Background="{TemplateBinding Background}"
                          Control.IsTemplateFocusTarget="True"
                          CornerRadius="{TemplateBinding CornerRadius}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource ContextualItemForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ContextualItemForegroundPointerOver}" />
                                        <Setter Target="Icon.(muxc:AnimatedIcon.State)" Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource ContextualItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ContextualItemForegroundPressed}" />
                                        <Setter Target="Icon.(muxc:AnimatedIcon.State)" Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource ContextualItemForegroundSelected}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ContextualItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource ContextualItemForegroundSelectedPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ContextualItemForegroundSelectedPointerOver}" />
                                        <Setter Target="Icon.(muxc:AnimatedIcon.State)" Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource ContextualItemForegroundSelectedPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ContextualItemForegroundSelectedPressed}" />
                                        <Setter Target="Icon.(muxc:AnimatedIcon.State)" Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource ContextualItemForegroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ContextualItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Width" Value="36" />
                                        <Setter Target="LayoutRoot.Height" Value="36" />
                                        <Setter Target="LayoutRoot.Margin" Value="2" />
                                        <Setter Target="IconBox.Margin" Value="10,0" />
                                        <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                                        <Setter Target="SelectionIndicatorGrid.Margin" Value="0" />
                                        <Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemIconOnlyExpandChevronMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ContentOnly">
                                    <VisualState.Setters>
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyContentPresenterMargin}" />
                                        <Setter Target="SelectionIndicatorGrid.Margin" Value="12,0,12,4" />
                                        <Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyExpandChevronMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InfoBadgeStates">
                                <VisualState x:Name="InfoBadgeVisible" />
                                <VisualState x:Name="InfoBadgeCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="InfoBadgePresenter.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PointerChevronStates">
                                <VisualState x:Name="NormalChevronHidden" />
                                <VisualState x:Name="NormalChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(muxc:AnimatedIcon.State)" Value="NormalOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(muxc:AnimatedIcon.State)" Value="NormalOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(muxc:AnimatedIcon.State)" Value="PointerOverOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ExpandCollapseChevronIcon.(muxc:AnimatedIcon.State)" Value="PointerOverOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ExpandCollapseChevronIcon.(muxc:AnimatedIcon.State)" Value="PointerOverOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(muxc:AnimatedIcon.State)" Value="PressedOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ExpandCollapseChevronIcon.(muxc:AnimatedIcon.State)" Value="PressedOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ExpandCollapseChevronIcon.(muxc:AnimatedIcon.State)" Value="PressedOff" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="PointerRectangle"
                                   Fill="Transparent"
                                   Visibility="Collapsed" />
                        <Grid x:Name="ContentGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Viewbox x:Name="IconBox"
                                     Width="16"
                                     Height="16"
                                     Margin="12,0,0,0"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center">
                                <ContentPresenter x:Name="Icon"
                                                  muxc:AnimatedIcon.State="Normal"
                                                  Content="{TemplateBinding Icon}"
                                                  Foreground="{TemplateBinding Foreground}" />

                            </Viewbox>
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="{ThemeResource TopNavigationViewItemContentPresenterMargin}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="Center"
                                              AutomationProperties.AccessibilityView="Raw"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              Foreground="{TemplateBinding Foreground}"
                                              TextWrapping="NoWrap" />
                            <Grid x:Name="ExpandCollapseChevron"
                                  Grid.Column="2"
                                  Width="40"
                                  Margin="{ThemeResource TopNavigationViewItemExpandChevronMargin}"
                                  HorizontalAlignment="Right"
                                  Background="Transparent"
                                  Visibility="Collapsed">
                                <muxc:AnimatedIcon x:Name="ExpandCollapseChevronIcon"
                                                   Width="12"
                                                   Height="12"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   muxc:AnimatedIcon.State="NormalOff"
                                                   AutomationProperties.AccessibilityView="Raw"
                                                   Foreground="{ThemeResource NavigationViewItemForeground}"
                                                   RenderTransformOrigin="0.5, 0.5">
                                    <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                                    <muxc:AnimatedIcon.FallbackIconSource>
                                        <muxc:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                             FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}"
                                                             Foreground="{ThemeResource NavigationViewItemForeground}"
                                                             Glyph="{StaticResource NavigationViewItemExpandedGlyph}" />
                                    </muxc:AnimatedIcon.FallbackIconSource>
                                </muxc:AnimatedIcon>
                            </Grid>
                            <ContentPresenter x:Name="InfoBadgePresenter"
                                              Grid.Column="3"
                                              Margin="-16,0,2,13"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding InfoBadge}" />

                        </Grid>
                        <Grid x:Name="SelectionIndicatorGrid"
                              Margin="16,0,16,4"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Bottom">
                            <Rectangle x:Name="SelectionIndicator"
                                       Width="16"
                                       Height="3"
                                       Fill="{ThemeResource ContextualItemForeground}"
                                       Opacity="0"
                                       RadiusX="2"
                                       RadiusY="2" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Name="ContextualTabItemStyle"
           TargetType="muxc:NavigationViewItem">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Margin" Value="{ThemeResource NavigationViewItemMargin}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="muxc:NavigationViewItem">
                    <Grid x:Name="NVIRootGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                                <VisualState x:Name="OnLeftNavigation" />
                                <VisualState x:Name="OnTopNavigationPrimary" />
                                <VisualState x:Name="OnTopNavigationOverflow" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <primitives:NavigationViewItemPresenter x:Name="NavigationViewItemPresenter"
                                                                Margin="{ThemeResource TopNavigationViewItemMargin}"
                                                                Padding="{TemplateBinding Padding}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                Content="{TemplateBinding Content}"
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                Control.IsTemplateFocusTarget="True"
                                                                CornerRadius="{TemplateBinding CornerRadius}"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Icon="{TemplateBinding Icon}"
                                                                InfoBadge="{TemplateBinding InfoBadge}"
                                                                IsTabStop="false"
                                                                Style="{StaticResource ContextualItemPresenterStyle}"
                                                                UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}" />
                        <muxc:ItemsRepeater x:Name="NavigationViewItemMenuItemsHost"
                                            Grid.Row="1"
                                            x:Load="False"
                                            Visibility="Collapsed">
                            <muxc:ItemsRepeater.Layout>
                                <muxc:StackLayout Orientation="Vertical" />
                            </muxc:ItemsRepeater.Layout>
                        </muxc:ItemsRepeater>
                        <FlyoutBase.AttachedFlyout>
                            <Flyout x:Name="ChildrenFlyout"
                                    Placement="BottomEdgeAlignedLeft">
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="Padding" Value="{ThemeResource NavigationViewItemChildrenMenuFlyoutPadding}" />
                                        <!--  Set negative top margin to make the flyout align exactly with the button  -->
                                        <Setter Property="Margin" Value="0,-4,0,0" />
                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                        <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                    <ScrollViewer x:Name="ScrollViewer"
                                                                  AutomationProperties.AccessibilityView="Raw"
                                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                                  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                                  ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                                        <ContentPresenter x:Name="ContentPresenter"
                                                                          Padding="{TemplateBinding Padding}"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Background="{TemplateBinding Background}"
                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                          CornerRadius="{TemplateBinding CornerRadius}" />
                                                    </ScrollViewer>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <Grid x:Name="FlyoutRootGrid">
                                    <Grid x:Name="FlyoutContentGrid" />
                                </Grid>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AppBarSplitButtonStyle"
           TargetType="muxc:SplitButton">
        <Setter Property="Background" Value="{ThemeResource SplitButtonBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource SplitButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SplitButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="-3" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="SplitButton">
                    <Grid x:Name="RootGrid"
                          Background="Transparent"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.Resources>
                            <!--  Override the style of the inner buttons so that they don't affect background/foreground/border colors  -->
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="{ThemeResource SplitButtonForeground}" />
                                <Setter Property="BorderBrush" Value="{ThemeResource Transparent}" />
                                <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                                <Setter Property="FocusVisualMargin" Value="-3" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid x:Name="RootGrid"
                                                  Background="Transparent">

                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />

                                                        <VisualState x:Name="PointerOver">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="PointerOver" />
                                                            </VisualState.Setters>
                                                        </VisualState>

                                                        <VisualState x:Name="Pressed">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="Pressed" />
                                                            </VisualState.Setters>
                                                        </VisualState>

                                                        <VisualState x:Name="Disabled">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SplitButtonForegroundDisabled}" />
                                                                <Setter Target="RootGrid.Background" Value="{ThemeResource SplitButtonBackgroundDisabled}" />
                                                                <Setter Target="ContentPresenter.BorderBrush" Value="Transparent" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <ContentPresenter x:Name="ContentPresenter"
                                                                  Padding="{TemplateBinding Padding}"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  AutomationProperties.AccessibilityView="Raw"
                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  ContentTransitions="{TemplateBinding ContentTransitions}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="PrimaryButtonColumn"
                                              Width="*"
                                              MinWidth="{ThemeResource SplitButtonPrimaryButtonSize}" />
                            <ColumnDefinition x:Name="Separator"
                                              Width="1" />
                            <ColumnDefinition x:Name="SecondaryButtonColumn"
                                              Width="{ThemeResource SplitButtonSecondaryButtonSize}" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushDisabled}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="Transparent" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="Transparent" />
                                        <Setter Target="RootGrid.Background" Value="Transparent" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="FlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="TouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPointerOver}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPointerOver}" />
                                        <Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackground}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedFlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedTouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SecondaryButtonPlacementStates">
                                <VisualState x:Name="SecondaryButtonRight" />

                                <VisualState x:Name="SecondaryButtonSpan">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryButton.(Grid.Column)" Value="0" />
                                        <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="3" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="PrimaryBackgroundGrid"
                              Grid.ColumnSpan="2"
                              Background="{TemplateBinding Background}" />

                        <Grid x:Name="DividerBackgroundGrid"
                              Grid.Column="1"
                              Width="1"
                              Background="{ThemeResource SplitButtonBorderBrushDivider}" />

                        <Grid x:Name="SecondaryBackgroundGrid"
                              Grid.Column="2"
                              Background="{TemplateBinding Background}" />

                        <!--<Grid
                            x:Name="Border"
                            Grid.ColumnSpan="3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />-->

                        <Button x:Name="PrimaryButton"
                                Grid.Column="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Command="{TemplateBinding Command}"
                                CommandParameter="{TemplateBinding CommandParameter}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False" />

                        <Button x:Name="SecondaryButton"
                                Grid.Column="2"
                                Padding="0,0,12,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                AutomationProperties.AccessibilityView="Raw"
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Foreground="{ThemeResource SplitButtonForegroundSecondary}"
                                IsTabStop="False">
                            <Button.Content>
                                <muxc:AnimatedIcon Width="12"
                                                   Height="12"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Center"
                                                   AutomationProperties.AccessibilityView="Raw">
                                    <animatedvisuals:AnimatedChevronDownSmallVisualSource />
                                    <muxc:AnimatedIcon.FallbackIconSource>
                                        <muxc:FontIconSource FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                             FontSize="8"
                                                             Glyph="&#xE96E;"
                                                             IsTextScaleFactorEnabled="False" />
                                    </muxc:AnimatedIcon.FallbackIconSource>
                                </muxc:AnimatedIcon>
                            </Button.Content>
                        </Button>
                        <Grid x:Name="Border"
                              Grid.ColumnSpan="3"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              CornerRadius="{TemplateBinding CornerRadius}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
