<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:contract8Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,8)"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:localconverters="using:CommunityToolkit.WinUI.Controls"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:primitives="using:CommunityToolkit.WinUI.Controls.Primitives"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:winuiprimitives="using:Microsoft.UI.Xaml.Controls.Primitives">

    <SolidColorBrush x:Key="CheckerboardColor0" Color="Transparent" />
    <SolidColorBrush x:Key="CheckerboardColor1" Color="#FFd4d4d4" />
    <converters:ColorToDisplayNameConverter x:Key="ColorToDisplayNameConverter" />
    <localconverters:ColorToHexConverter x:Key="ColorToHexConverter" />

    <localconverters:ContrastBrushConverter x:Key="ContrastBrushConverter" />
    <animations:ImplicitAnimationSet x:Name="ShowTransitions">
        <animations:OffsetAnimation
            EasingMode="EaseOut"
            From="0,24,0"
            To="0"
            Duration="0:0:0.4" />
        <animations:OpacityAnimation
            EasingMode="EaseOut"
            From="0"
            To="1"
            Duration="0:0:0.2" />
    </animations:ImplicitAnimationSet>
    <animations:ImplicitAnimationSet x:Name="HideTransitions">
        <animations:OffsetAnimation
            EasingMode="EaseOut"
            From="0"
            To="0,24,0"
            Duration="0:0:0.2" />
        <animations:OpacityAnimation
            EasingMode="EaseOut"
            From="1"
            To="0"
            Duration="0:0:0.1" />
    </animations:ImplicitAnimationSet>


    <Style BasedOn="{StaticResource DefaultColorPickerStyle}" TargetType="controls:ColorPicker" />

    <Style x:Key="DefaultColorPickerStyle" TargetType="controls:ColorPicker">
        <Style.Setters>
            <Setter Property="Width" Value="360" />
            <Setter Property="Height" Value="472" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Padding" Value="8" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:ColorPicker">
                        <Grid
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            RowSpacing="12">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <controls:Segmented
                                x:Name="ColorPanelSelector"
                                Grid.Row="1"
                                HorizontalAlignment="Stretch"
                                SelectedIndex="0">
                                <controls:SegmentedItem
                                    x:Name="SpectrumItem"
                                    AutomationProperties.Name="Spectrum"
                                    Icon="{ui:FontIcon Glyph=&#xE76D;}" />
                                <controls:SegmentedItem
                                    x:Name="PaletteItem"
                                    AutomationProperties.Name="Palette"
                                    Icon="{ui:FontIcon Glyph=&#xE790;}" />
                                <controls:SegmentedItem
                                    x:Name="ChannelsItem"
                                    AutomationProperties.Name="Channels"
                                    Icon="{ui:FontIcon Glyph=&#xE9E9;}" />
                            </controls:Segmented>

                            <controls:SwitchPresenter
                                x:Name="ContentContainer"
                                Grid.Row="2"
                                Value="{Binding ElementName=ColorPanelSelector, Path=SelectedItem.Name}">
                                <controls:Case Value="SpectrumItem">
                                    <Grid
                                        HorizontalAlignment="Stretch"
                                        animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                        animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <primitives:ColorPickerSlider
                                            x:Name="ColorSpectrumThirdDimensionSlider"
                                            HorizontalAlignment="Center"
                                            Margin="0,0,12,0"
                                            VerticalAlignment="Stretch"
                                            Orientation="Vertical" />
                                        <!--  Keep in mind the spectrum is always HSV  -->
                                        <!--  This must also not be named 'ColorSpectrum' to differentiate from the base class  -->
                                        <Viewbox
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                      
                                            Grid.Column="1">

                                            <winuiprimitives:ColorSpectrum
                                                x:Name="ColorSpectrumControl"
                                                Grid.Column="1"
                                                MinWidth="256"
                                                MinHeight="256"
                                                win:AutomationProperties.Name="Third Dimension"
                                                Components="{TemplateBinding ColorSpectrumComponents}"
                                                CornerRadius="{StaticResource ControlCornerRadius}"
                                                MaxHue="{TemplateBinding MaxHue}"
                                                MaxSaturation="{TemplateBinding MaxSaturation}"
                                                MaxValue="{TemplateBinding MaxValue}"
                                                MinHue="{TemplateBinding MinHue}"
                                                MinSaturation="{TemplateBinding MinSaturation}"
                                                MinValue="{TemplateBinding MinValue}"
                                                Shape="{TemplateBinding ColorSpectrumShape}" />
                                        </Viewbox>


                                        <primitives:ColorPickerSlider
                                            x:Name="ColorSpectrumAlphaSlider"
                                            Grid.Column="2"
                                            Margin="12,0,0,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Stretch"
                                            win:AutomationProperties.Name="Alpha Channel"
                                            Orientation="Vertical" />
                                    </Grid>
                                </controls:Case>
                                <controls:Case Value="PaletteItem">
                                    <Grid HorizontalAlignment="Stretch">
                                        <GridView
                                            Margin="0"
                                            Padding="0"
                                            animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                            ItemsSource="{TemplateBinding CustomPaletteColors}"
                                            SelectedValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Color, Mode=TwoWay}"
                                            SelectionMode="Single"
                                            Tag="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Color, Mode=OneWay}">
                                            <GridView.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <controls:UniformGrid ui:FrameworkElementExtensions.AncestorType="controls:ColorPicker" Columns="{Binding (ui:FrameworkElementExtensions.Ancestor).CustomPaletteColumnCount, RelativeSource={RelativeSource Self}}" />
                                                </ItemsPanelTemplate>
                                            </GridView.ItemsPanel>
                                            <GridView.ItemContainerStyle>
                                                <Style BasedOn="{StaticResource DefaultGridViewItemStyle}" TargetType="GridViewItem">
                                                    <Setter Property="Padding" Value="0" />
                                                    <Setter Property="Margin" Value="1" />
                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                                </Style>
                                            </GridView.ItemContainerStyle>
                                            <GridView.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch"
                                                        win:AutomationProperties.Name="{Binding Converter={StaticResource ColorToDisplayNameConverter}}"
                                                        ToolTipService.ToolTip="{Binding Converter={StaticResource ColorToDisplayNameConverter}}">
                                                        <Grid.Background>
                                                            <SolidColorBrush Color="{Binding}" />
                                                        </Grid.Background>
                                                    </Grid>
                                                </DataTemplate>
                                            </GridView.ItemTemplate>
                                        </GridView>
                                    </Grid>
                                </controls:Case>
                                <controls:Case Value="ChannelsItem">
                                    <Grid
                                        HorizontalAlignment="Stretch"
                                        animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                        animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                        ColumnSpacing="24"
                                        RowSpacing="12">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="120" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <!--  Top color model & Hex input  -->

                                        <!--  Content RGB/HSV names are hard-coded in ColorPicker as well  -->
                                        <!--  ToggleButtons are styled to look like a 'SegmentedControl' or 'ButtonGroup'  -->
                                        <ComboBox
                                            x:Name="ColorModeComboBox"
                                            HorizontalAlignment="Stretch"
                                            SelectedIndex="0">
                                            <ComboBoxItem>RGB</ComboBoxItem>
                                            <ComboBoxItem>HSV</ComboBoxItem>
                                        </ComboBox>


                                        <!--  Name must NOT match what is in ColorPicker 'HexTextBox'  -->
                                        <TextBox
                                            x:Name="HexInputTextBox"
                                            Grid.Column="1"
                                            Height="32"
                                            HorizontalAlignment="Stretch"
                                            win:AutomationProperties.Name="Hexadecimal Color Input"
                                            CharacterCasing="Upper"
                                            PlaceholderText="#"
                                            Style="{StaticResource ColorInputTextBoxStyle}" />


                                        <!--  Color channel editing controls  -->
                                        <!--  Channel 1 RGB:Red HSV:Hue  -->

                                        <muxc:NumberBox
                                            x:Name="Channel1NumberBox"
                                            Grid.Row="1"
                                            VerticalAlignment="Center"
                                            win:AutomationProperties.Name="Red Channel"
                                            PlaceholderText="R"
                                            Style="{StaticResource ColorInputNumberBoxStyle}" />
                                        <primitives:ColorPickerSlider
                                            x:Name="Channel1Slider"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            win:AutomationProperties.Name="Red Channel" />

                                        <!--  Channel 2 RGB:Green HSV:Saturation  -->

                                        <muxc:NumberBox
                                            x:Name="Channel2NumberBox"
                                            Grid.Row="2"
                                            VerticalAlignment="Center"
                                            win:AutomationProperties.Name="Green Channel"
                                            PlaceholderText="G"
                                            Style="{StaticResource ColorInputNumberBoxStyle}" />

                                        <primitives:ColorPickerSlider
                                            x:Name="Channel2Slider"
                                            Grid.Row="2"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            win:AutomationProperties.Name="Green Channel" />


                                        <!--  Channel 3 RGB:Blue HSV:Value  -->
                                        <muxc:NumberBox
                                            x:Name="Channel3NumberBox"
                                            Grid.Row="3"
                                            VerticalAlignment="Center"
                                            win:AutomationProperties.Name="Blue Channel"
                                            PlaceholderText="B"
                                            Style="{StaticResource ColorInputNumberBoxStyle}" />

                                        <primitives:ColorPickerSlider
                                            x:Name="Channel3Slider"
                                            Grid.Row="3"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            win:AutomationProperties.Name="Blue Channel" />


                                        <!--  Alpha channel  -->

                                        <muxc:NumberBox
                                            x:Name="AlphaChannelNumberBox"
                                            Grid.Row="4"
                                            VerticalAlignment="Center"
                                            win:AutomationProperties.Name="Alpha Channel"
                                            PlaceholderText="A"
                                            Style="{StaticResource ColorInputNumberBoxStyle}" />

                                        <primitives:ColorPickerSlider
                                            x:Name="AlphaChannelSlider"
                                            Grid.Row="4"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            win:AutomationProperties.Name="Alpha Channel" />

                                    </Grid>
                                </controls:Case>
                            </controls:SwitchPresenter>
                            <Grid
                                x:Name="ColorPreviewGrid"
                                Grid.Row="0"
                                Height="32">
                                <primitives:ColorPreviewer x:Name="ColorPreviewer" ShowAccentColors="{TemplateBinding ShowAccentColors}" />
                            </Grid>

                            <VisualStateManager.VisualStateGroups>

                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootButton.Background" Value="{ThemeResource ButtonBackgroundDisabled}" />
                                            <Setter Target="RootButton.BorderBrush" Value="{ThemeResource ButtonBorderBrushDisabled}" />
                                            <Setter Target="DropDownGlyph.Foreground" Value="{ThemeResource ButtonForegroundDisabled}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="RootButton.Background" Value="{ThemeResource ButtonBackgroundPointerOver}" />
                                            <Setter Target="RootButton.BorderBrush" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
                                            <Setter Target="DropDownGlyph.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="RootButton.Background" Value="{ThemeResource ButtonBackgroundPressed}" />
                                            <Setter Target="RootButton.BorderBrush" Value="{ThemeResource ButtonBorderBrushPressed}" />
                                            <Setter Target="DropDownGlyph.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ColorSpectrumVisibility">
                                    <VisualState x:Name="ColorSpectrumVisible" />
                                    <VisualState x:Name="ColorSpectrumCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="SpectrumItem.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ColorPaletteVisibility">
                                    <VisualState x:Name="ColorPaletteVisible" />
                                    <VisualState x:Name="ColorPaletteCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="PaletteItem.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ColorPreviewVisibility">
                                    <VisualState x:Name="ColorPreviewVisible" />
                                    <VisualState x:Name="ColorPreviewCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="ColorPreviewGrid.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PreviousColorVisibility">
                                    <!--  Previous color is not currently supported  -->
                                    <VisualState x:Name="PreviousColorCollapsedVertical" />
                                    <VisualState x:Name="PreviousColorVisibleVertical" />
                                    <VisualState x:Name="PreviousColorCollapsedHorizontal" />
                                    <VisualState x:Name="PreviousColorVisibleHorizontal" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ThirdDimensionSliderVisibility">
                                    <VisualState x:Name="ThirdDimensionSliderVisible" />
                                    <VisualState x:Name="ThirdDimensionSliderCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="ColorSpectrumThirdDimensionSlider.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="AlphaSliderVisibility">
                                    <VisualState x:Name="AlphaSliderVisible" />
                                    <VisualState x:Name="AlphaSliderCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="ColorSpectrumAlphaSlider.Visibility" Value="Collapsed" />
                                            <Setter Target="AlphaChannelNumberBox.Visibility" Value="Collapsed" />
                                            <Setter Target="AlphaChannelSlider.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="MoreButtonVisibility">
                                    <!--  More button isn't supported  -->
                                    <VisualState x:Name="MoreButtonVisible" />
                                    <VisualState x:Name="MoreButtonCollapsed" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="TextEntryGridVisibility">
                                    <!--  Text entry grid is not currently supported  -->
                                    <VisualState x:Name="TextEntryGridCollapsed" />
                                    <VisualState x:Name="TextEntryGridVisible" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ColorChannelTextInputVisibility">
                                    <VisualState x:Name="ColorChannelTextInputVisible" />
                                    <VisualState x:Name="ColorChannelTextInputCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="ChannelsItem.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="AlphaTextInputVisibility">
                                    <VisualState x:Name="AlphaTextInputVisible" />
                                    <VisualState x:Name="AlphaTextInputCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="AlphaChannelNumberBox.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PanelSelectorVisibility">
                                    <VisualState x:Name="ColorPanelSelectorVisible" />
                                    <VisualState x:Name="ColorPanelSelectorCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="ColorPanelSelector.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ColorRepresentationSelected">
                                    <VisualState x:Name="RgbSelected" />
                                    <VisualState x:Name="HsvSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Channel1NumberBox.PlaceholderText" Value="H" />
                                            <Setter Target="Channel2NumberBox.PlaceholderText" Value="S" />
                                            <Setter Target="Channel3NumberBox.PlaceholderText" Value="V" />
                                            <Setter Target="Channel1NumberBox.(AutomationProperties.Name)" Value="Hue Channel" />
                                            <Setter Target="Channel2NumberBox.(AutomationProperties.Name)" Value="Saturation Channel" />
                                            <Setter Target="Channel3NumberBox.(AutomationProperties.Name)" Value="Value Channel" />
                                            <Setter Target="Channel1Slider.(AutomationProperties.Name)" Value="Hue Channel" />
                                            <Setter Target="Channel2Slider.(AutomationProperties.Name)" Value="Saturation Channel" />
                                            <Setter Target="Channel3Slider.(AutomationProperties.Name)" Value="Value Channel" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HexInputVisibility">
                                    <VisualState x:Name="HexInputVisible" />
                                    <VisualState x:Name="HexInputCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="HexInputBox.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="AlphaEnabledState">
                                    <!--  Not currently supported  -->
                                    <VisualState x:Name="AlphaDisabled">
                                        <VisualState.Setters>
                                            <Setter Target="ColorSpectrumAlphaSlider.Visibility" Value="Collapsed" />
                                            <Setter Target="AlphaChannelNumberBox.Visibility" Value="Collapsed" />
                                            <Setter Target="AlphaChannelSlider.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="AlphaEnabled" />
                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="ColorInputTextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}" />
        <Setter Property="Background" Value="{ThemeResource TextControlBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}" />
        <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}" />
        <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
        <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
        <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
        <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}" />
        <Setter Property="ContextFlyout" Value="{StaticResource TextControlCommandBarContextFlyout}" />
        <Setter Property="SelectionFlyout" Value="{StaticResource TextControlCommandBarSelectionFlyout}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid
                                                x:Name="ButtonLayoutGrid"
                                                Margin="{ThemeResource TextBoxInnerButtonMargin}"
                                                Background="{ThemeResource TextControlButtonBackground}"
                                                BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                                BorderBrush="{ThemeResource TextControlButtonBorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{TemplateBinding CornerRadius}">
                                                <TextBlock
                                                    x:Name="GlyphElement"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    AutomationProperties.AccessibilityView="Raw"
                                                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                    FontSize="{ThemeResource TextBoxIconFontSize}"
                                                    FontStyle="Normal"
                                                    Foreground="{ThemeResource TextControlButtonForeground}"
                                                    Text="&#xE894;" />
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />

                                                        <VisualState x:Name="PointerOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>

                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>

                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="ButtonLayoutGrid"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    To="0"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ContentPresenter
                            x:Name="HeaderContentPresenter"
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="{ThemeResource TextBoxTopHeaderMargin}"
                            VerticalAlignment="Top"
                            x:DeferLoadStrategy="Lazy"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            FontWeight="Normal"
                            Foreground="{ThemeResource TextControlHeaderForeground}"
                            TextWrapping="Wrap"
                            Visibility="Collapsed" />

                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>


                            <Border
                                x:Name="BorderElement"
                                Grid.ColumnSpan="3"
                                MinWidth="{TemplateBinding MinWidth}"
                                MinHeight="{TemplateBinding MinHeight}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Control.IsTemplateFocusTarget="True"
                                CornerRadius="{TemplateBinding CornerRadius}" />
                            <ScrollViewer
                                x:Name="ContentElement"
                                Grid.Column="1"
                                Margin="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                AutomationProperties.AccessibilityView="Raw"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                IsTabStop="False"
                                IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                ZoomMode="Disabled" />
                            <Border
                                x:Name="PlaceholderContainerElement"
                                MinWidth="24"
                                Margin="1"
                                Background="{ThemeResource ControlAltFillColorTertiaryBrush}"
                                BorderBrush="{ThemeResource DividerStrokeColorDefaultBrush}"
                                BorderThickness="0,0,1,0">
                                <TextBlock
                                    x:Name="PlaceholderTextBlock"
                                    Padding="6,5,6,6"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForeground}}"
                                    IsHitTestVisible="False"
                                    Text="{TemplateBinding PlaceholderText}" />
                            </Border>

                            <Button
                                x:Name="DeleteButton"
                                Grid.Column="2"
                                Width="30"
                                Padding="{ThemeResource HelperButtonThemePadding}"
                                VerticalAlignment="Stretch"
                                AutomationProperties.AccessibilityView="Raw"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                FontSize="{TemplateBinding FontSize}"
                                IsTabStop="False"
                                Style="{StaticResource DeleteButtonStyle}"
                                Visibility="Collapsed" />
                        </Grid>
                        <ContentPresenter
                            x:Name="DescriptionPresenter"
                            Grid.Row="2"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            x:Load="False"
                            AutomationProperties.AccessibilityView="Raw"
                            Content="{TemplateBinding Description}"
                            Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderContainerElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ControlAltFillColorDisabledBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Visibility">
                                           <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                       </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundDisabled}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="PointerOver">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                           <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundPointerOver}}" />
                                       </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">

                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                           <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundFocused}}" />
                                       </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderThemeThicknessFocused}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="ButtonVisible">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ButtonCollapsed" />

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  These are 1:1 copies of the default NumberBox-related styles, only change is the InputBox.Style  -->
    <Style
        x:Name="NumberBoxSpinButtonStyle"
        BasedOn="{StaticResource DefaultRepeatButtonStyle}"
        TargetType="RepeatButton">
        <Style.Setters>
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="MinWidth" Value="34" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Background" Value="{ThemeResource TextControlBackground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource NumberBoxSpinButtonBorderThickness}" />
            <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        </Style.Setters>
    </Style>

    <Style x:Name="NumberBoxPopupSpinButtonStyle" TargetType="RepeatButton">
        <Style.Setters>
            <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Background" Value="{ThemeResource NumberBoxPopupSpinButtonBackground}" />
            <Setter Property="BorderThickness" Value="{ThemeResource NumberBoxPopupSpinButtonBorderThickness}" />
            <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        </Style.Setters>
    </Style>
    <Style x:Key="ColorInputNumberBoxStyle" TargetType="muxc:NumberBox">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}" />
        <Setter Property="SelectionFlyout" Value="{StaticResource TextControlCommandBarSelectionFlyout}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
        <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="muxc:NumberBox">
                    <Grid>
                        <Grid.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Light">
                                        <StaticResource x:Key="RepeatButtonBorderBrushPointerOver" ResourceKey="TextControlBorderBrush" />
                                        <StaticResource x:Key="RepeatButtonBorderBrushPressed" ResourceKey="TextControlBorderBrush" />
                                    </ResourceDictionary>

                                    <ResourceDictionary x:Key="Dark">
                                        <StaticResource x:Key="RepeatButtonBorderBrushPointerOver" ResourceKey="TextControlBorderBrush" />
                                        <StaticResource x:Key="RepeatButtonBorderBrushPressed" ResourceKey="TextControlBorderBrush" />
                                    </ResourceDictionary>

                                    <ResourceDictionary x:Key="HighContrast">
                                        <StaticResource x:Key="RepeatButtonBorderBrushPointerOver" ResourceKey="SystemControlHighlightBaseMediumLowBrush" />
                                        <StaticResource x:Key="RepeatButtonBorderBrushPressed" ResourceKey="SystemControlHighlightTransparentBrush" />
                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Grid.Resources>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ContentPresenter
                            x:Name="HeaderContentPresenter"
                            Grid.ColumnSpan="3"
                            Margin="{ThemeResource TextBoxTopHeaderMargin}"
                            VerticalAlignment="Top"
                            x:DeferLoadStrategy="Lazy"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="Normal"
                            Foreground="{ThemeResource TextControlHeaderForeground}"
                            TextWrapping="Wrap"
                            Visibility="Collapsed" />

                        <TextBox
                            x:Name="InputBox"
                            Grid.Row="1"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            InputScope="{TemplateBinding InputScope}"
                            PlaceholderText="{TemplateBinding PlaceholderText}"
                            PreventKeyboardDisplayOnProgrammaticFocus="{TemplateBinding PreventKeyboardDisplayOnProgrammaticFocus}"
                            SelectionFlyout="{TemplateBinding SelectionFlyout}"
                            SelectionHighlightColor="{TemplateBinding SelectionHighlightColor}"
                            Style="{StaticResource ColorInputTextBoxStyle}"
                            TextAlignment="{TemplateBinding TextAlignment}"
                            TextReadingOrder="{TemplateBinding TextReadingOrder}" />

                        <Popup
                            x:Name="UpDownPopup"
                            Grid.Row="1"
                            Grid.Column="1"
                            HorizontalAlignment="Left"
                            contract8Present:ShouldConstrainToRootBounds="False"
                            HorizontalOffset="{ThemeResource NumberBoxPopupHorizonalOffset}"
                            VerticalOffset="{ThemeResource NumberBoxPopupVerticalOffset}">

                            <Grid
                                x:Name="PopupContentRoot"
                                Background="{ThemeResource NumberBoxPopupBackground}"
                                BorderBrush="{ThemeResource NumberBoxPopupBorderBrush}"
                                BorderThickness="{ThemeResource NumberBoxPopupBorderThickness}"
                                CornerRadius="{ThemeResource OverlayCornerRadius}">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <RepeatButton
                                    x:Name="PopupUpSpinButton"
                                    Content="&#xE70E;"
                                    Style="{StaticResource NumberBoxPopupSpinButtonStyle}" />

                                <RepeatButton
                                    x:Name="PopupDownSpinButton"
                                    Grid.Row="1"
                                    Content="&#xE70D;"
                                    Style="{StaticResource NumberBoxPopupSpinButtonStyle}" />
                            </Grid>
                        </Popup>

                        <RepeatButton
                            x:Name="UpSpinButton"
                            Grid.Row="1"
                            Grid.Column="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Content="&#xE70E;"
                            CornerRadius="0"
                            FontSize="{TemplateBinding FontSize}"
                            Style="{StaticResource NumberBoxSpinButtonStyle}"
                            Visibility="Collapsed" />

                        <RepeatButton
                            x:Name="DownSpinButton"
                            Grid.Row="1"
                            Grid.Column="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Content="&#xE70D;"
                            CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                            FontSize="{TemplateBinding FontSize}"
                            Style="{StaticResource NumberBoxSpinButtonStyle}"
                            Visibility="Collapsed" />

                        <ContentPresenter
                            x:Name="DescriptionPresenter"
                            Grid.Row="2"
                            Grid.ColumnSpan="3"
                            AutomationProperties.AccessibilityView="Raw"
                            Content="{TemplateBinding Description}"
                            Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContentPresenter.Foreground" Value="{ThemeResource TextControlHeaderForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SpinButtonStates">
                                <VisualState x:Name="SpinButtonsCollapsed" />

                                <VisualState x:Name="SpinButtonsVisible">
                                    <VisualState.Setters>
                                        <Setter Target="DownSpinButton.Visibility" Value="Visible" />
                                        <Setter Target="UpSpinButton.Visibility" Value="Visible" />
                                        <Setter Target="InputBox.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SpinButtonsPopup">
                                    <VisualState.Setters>
                                        <Setter Target="InputBox.Style" Value="{StaticResource NumberBoxTextBoxStyle}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="UpSpinButtonEnabledStates">
                                <VisualState x:Name="UpSpinButtonEnabled" />
                                <VisualState x:Name="UpSpinButtonDisabled">
                                    <VisualState.Setters>
                                        <Setter Target="UpSpinButton.IsEnabled" Value="False" />
                                        <Setter Target="PopupUpSpinButton.IsEnabled" Value="False" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DownSpinButtonEnabledStates">
                                <VisualState x:Name="DownSpinButtonEnabled" />
                                <VisualState x:Name="DownSpinButtonDisabled">
                                    <VisualState.Setters>
                                        <Setter Target="DownSpinButton.IsEnabled" Value="False" />
                                        <Setter Target="PopupDownSpinButton.IsEnabled" Value="False" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
